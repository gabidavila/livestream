name: Images for GitHub and Docker

on:
  create:
    tags:
      - '*'

env:
  OWNER: gabidavila
  REGISTRY_PATH: ${{ github.workspace }}/registry
  CACHE_PATH: /tmp/.buildx-cache

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup env
        id: prep
        run: |
          REPO_TAG=$(sed -E 's/(.*\/)*([[:alnum:]].*)/\2/;t;d' <<< $GITHUB_REF)
          PACKAGE=$(sed -E 's/^(\w+)-(.*)/\1/;t;d' <<< $REPO_TAG)
          VERSION=$(sed -E 's/^(\w+)-(.*)/\2/;t;d' <<< $REPO_TAG)
          GITHUB_URL_PACKAGE=ghcr.io
          APP_NAME=${{github.repository_owner}}/${PACKAGE}
          GH_NAME=${GITHUB_URL_PACKAGE}/${{github.repository_owner}}/livestream/${PACKAGE}
          TAGS=${APP_NAME}:${VERSION}
          TAGS_GH=${GH_NAME}:${VERSION}
          echo ::set-output name=package::${PACKAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=tags_gh::${TAGS_GH}
        shell: bash
      - 
        name: Checkout repository
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Start Docker registry
        run: |
          docker run -d -p 5000:5000 -v ${REGISTRY_PATH}:/var/lib/registry --name registry registry:2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host
      - 
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - 
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}
      -
        name: Build and Push Locally
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          tags: localhost:5000/${{github.repository_owner}}/livestream/${{ steps.prep.outputs.package }}:${{ steps.prep.outputs.version }}
          cache-from: |
            type=local,src=${{ env.CACHE_PATH }}
            ghcr.io/${{ github.repository_owner }}/livestream/${{ steps.prep.outputs.package }}:${{ steps.prep.outputs.version }}
          cache-to: type=local,dest=${{ env.CACHE_PATH }}
          context: ./containers/${{ steps.prep.outputs.package }}/${{ steps.prep.outputs.version }}/
          file: ./containers/${{ steps.prep.outputs.package }}/${{ steps.prep.outputs.version }}/Dockerfile
          push: true
      - 
        name: Upload Docker registry data for testing
        uses: actions/upload-artifact@v2
        with:
          name: docker-registry-data
          path: ${{ env.REGISTRY_PATH }}/
      - 
        name: Login to Docker Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - 
        name: Publish
        uses: docker/build-push-action@v2
        with:
          context: ./containers/${{ steps.prep.outputs.package }}/${{ steps.prep.outputs.version }}/
          file: ./containers/${{ steps.prep.outputs.package }}/${{ steps.prep.outputs.version }}/Dockerfile
          cache-from: type=local,src=${{ env.CACHE_PATH }}
          cache-to: type=local,dest=${{ env.CACHE_PATH }}
          push: true
          tags: ${{ steps.prep.outputs.tags }}, ${{ steps.prep.outputs.tags_gh}}
      -
        name: Stop Docker registry
        run: docker stop registry
