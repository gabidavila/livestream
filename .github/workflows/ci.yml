name: Docker Images

on:
  create:
    tags:

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - 
        name: Build the Docker image    
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - 
        name: Get the version
        id: prep
        run: |
          REPO_TAG=$(sed -E 's/(.*\/)*([[:alnum:]].*)/\2/;t;d' <<< $GITHUB_REF)
          PACKAGE=$(sed -E 's/(^[a-z]+)-([0-9.]+$)/\1/;t;d' <<< $REPO_TAG)
          APP_NAME=${GITHUB_REPOSITORY_OWNER}/${PACKAGE}
          echo $APP_NAME
          VERSION=$(sed -E 's/(^[a-z]+)-([0-9.]+$)/\2/;t;d' <<< $REPO_TAG)
          TAGS=${APP_NAME}:${VERSION}
          echo ::set-output name=owner::${GITHUB_REPOSITORY_OWNER}
          echo ::set-output name=package::${PACKAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
      -
         name: Login to DockerHub
         uses: docker/login-action@v1 
         with:
            username: ${{ steps.prep.outputs.owner }}
            password: ${{ secrets.DOCKER_PASSWORD }}
      -
         name: Build and Push
         id: docker_build
         uses: docker/build-push-action@v2
         with:
           tags: ${{ steps.prep.outputs.tags }}
           context: ./containers/${{ steps.prep.outputs.package }}/${{ steps.prep.outputs.version }}/
           file: ./containers/${{ steps.prep.outputs.package }}/${{ steps.prep.outputs.version }}/Dockerfile
           push: true
      -
         name: Image digest
         run: echo ${{ steps.docker_build.outputs.digest }}
